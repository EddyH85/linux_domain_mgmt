---
- name: include distribution dependency variables
  include_vars: "{{ item }}"
  with_first_found:
    - "{{ ansible_distribution_file_variety }}-{{ ansible_distribution_major_version }}.yml"
    - "{{ ansible_distribution_file_variety }}.yml"

- name: Install Required Packages
  package:
    name: "{{ package }}"
    state: present

- name: Checking Domain Join status
  command: id "{{ Join_User }}"
  register: ad_status
  changed_when: false
  ignore_errors: true

- name: play ad_status
  debug:
    msg: "ad_status is {{ ad_status.rc }}"

- name: Active Dircetory Domain join in to {{ DomainName }}
  block:
    - name: Configuring Kerberos V5 Client
      template:
        src: krb5.conf.j2
        dest: /etc/krb5.conf
        owner: root
        group: root
        mode: 0644

    - name: nsswitch | enable sss
      replace:
        dest: /etc/nsswitch.conf
        regexp: '^({{ item }}(?!.*\bsss\b).*)$'
        replace: '\1 sss'
        backup: yes
      with_items:
        - passwd
        - group
        - shadow
        - services
        - netgroup
        - sudoers

    - name: Enable SSO on SSH Daemon
      lineinfile:
        backup: yes
        state: present
        dest: /etc/ssh/sshd_config
        regexp: '^#?\s*{{ item.search }}\s'
        line: '{{ item.replace }}'
        validate: sshd -T -f %s
      with_items:
        - { search: 'GSSAPIAuthentication', replace: 'GSSAPIAuthentication yes' }
        - { search: 'GSSAPICleanupCredentials', replace: 'GSSAPICleanupCredentials yes' }
        - { search: 'ChallengeResponseAuthentication', replace: 'ChallengeResponseAuthentication yes' }
        - { search: 'KbdInteractiveAuthentication', replace: 'KbdInteractiveAuthentication yes' }
      notify: restart sshd

    - name: Enable SSO on SSH Client
      lineinfile:
        backup: yes
        state: present
        dest: /etc/ssh/ssh_config
        regexp: '^#?\s*{{ item.search }}\s'
        line: '{{ item.replace }}'
      with_items:
        - { search: 'GSSAPIAuthentication', replace: 'GSSAPIAuthentication yes' }
        - { search: 'GSSAPIDelegateCredentials', replace: 'GSSAPIDelegateCredentials yes' }

    - name: Joining into Domain {{ DomainName }}
      command: /bin/bash -c "echo '{{ Join_User_Pass }}' | adcli join -U {{ Join_User }} {{ DomainName }} -O '{{ Join_OU }}' --stdin-password"
      changed_when: true

    - name: Check PAM Configuration
      include_tasks: "{{ item }}"
      with_first_found:
        - "{{ ansible_distribution_file_variety }}-{{ ansible_distribution_major_version }}.yml"
        - "{{ ansible_distribution_file_variety }}.yml"

    - name: Configuring SSSD Client
      template:
        src: sssd.conf.j2
        dest: /etc/sssd/sssd.conf
        owner: root
        group: root
        mode: 0600
      notify: restart sssd

    - name: Ensure SSSD is started and enabled on boot
      service:
        name: sssd
        state: started
        enabled: yes

    - name: Check if {{ PermitAdminGroups }} exist in /etc/sudoers
      lineinfile:
        path: /etc/sudoers
        regexp: '^%{{ PermitAdminGroups }}'
        line: '%{{ PermitAdminGroups }} ALL=(ALL) NOPASSWD: ALL'
        validate: 'visudo -cf %s'
  when: ad_status.rc !=0